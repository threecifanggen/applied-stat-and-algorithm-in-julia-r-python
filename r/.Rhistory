install.packages(c("pROC", "tidyverse"))
install.packages("prettydoc")
install.packages("prettydoc")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
plot(pressure)
install.packages("survival")
knitr::opts_chunk$set(echo = TRUE)
library(survival)
install.packages("xlsx")
df <- xlsx::read.xlsx2("../datasets/肿瘤大小生存数据.xlsx", 1)
library(tidyverse)
df %>%
mutate(is_deleted = `删失`) %>%
df %>%
mutate(is_deleted = `删失`) %>%
df %>%
mutate("is_deleted" = `删失`) %>%
df <- xlsx::read.xlsx2("../datasets/肿瘤大小生存数据.xlsx", 1)
df
df <- xlsx::read.xlsx("../datasets/肿瘤大小生存数据.xlsx", 1)
df
df <- readxl::read_xlsx("../datasets/肿瘤大小生存数据.xlsx", 1)
df
df %>%
mutate("is_deleted" = `删失`) %>%
knitr::opts_chunk$set(echo = TRUE)
Sys.setlocale("LC_ALL", "CHS")
library(survival)
library(tidyverse)
df <- readxl::read_xlsx("../datasets/肿瘤大小生存数据.xlsx", 1)
df <- xlsx::read.xlsx("../datasets/肿瘤大小生存数据.xlsx", 1)
df <- xlsx::read.xlsx("../datasets/肿瘤大小生存数据.xlsx", 1)
df %>%
mutate("is_deleted" = `删失`) %>%
mutate(group = if (`肿瘤大小` == '小于3cm') {0} else {1}) %>%
mutate(month = `生存月数`)
mutate(group = ifelse(`肿瘤大小` == '小于3cm', 0, 1) %>%
df <- xlsx::read.xlsx("../datasets/肿瘤大小生存数据.xlsx", 1)
df %>%
df <- xlsx::read.xlsx("../datasets/肿瘤大小生存数据.xlsx", 1)
df %>%
mutate("is_deleted" = `删失`) %>%
mutate(group = ifelse(`肿瘤大小` == '小于3cm', 0, 1) %>%
mutate(month = `生存月数`)
df <- xlsx::read.xlsx("../datasets/肿瘤大小生存数据.xlsx", 1)
df %>%
mutate(is_deleted = `删失`) %>%
mutate(group = ifelse(`肿瘤大小` == '小于3cm', 0, 1) %>%
mutate(month = `生存月数`)
df <- xlsx::read.xlsx("../datasets/肿瘤大小生存数据.xlsx", 1)
df <- xlsx::read.xlsx("../datasets/肿瘤大小生存数据.xlsx", 1)
df %>%
mutate(is_deleted = `删失`) %>%
mutate(group = ifelse(`肿瘤大小` == '小于3cm', 0, 1) %>%
mutate(month = `生存月数`)
df <- xlsx::read.xlsx("../datasets/肿瘤大小生存数据.xlsx", 1)
df %>%
mutate(is_deleted = `删失`) %>%
mutate(group = ifelse(`肿瘤大小` == '小于3cm', 0, 1)) %>%
mutate(month = `生存月数`)
df
df <- xlsx::read.xlsx("../datasets/肿瘤大小生存数据.xlsx", 1)
df %>%
mutate(is_deleted = `删失`) %>%
mutate(group = ifelse(`肿瘤大小` == '小于3cm', 0, 1)) %>%
mutate(month = `生存月数`)
df
test_df
df <- xlsx::read.xlsx("../datasets/肿瘤大小生存数据.xlsx", 1)
test_df <- df %>%
mutate(is_deleted = `删失`) %>%
mutate(group = ifelse(`肿瘤大小` == '小于3cm', 0, 1)) %>%
mutate(month = `生存月数`)
test_df
Surv(test_df$month, test_df$is_deleted)
survfit(Surv(test_df$month, test_df$is_deleted)~ test_df$group)
data
data <- Surv(test_df$month, test_df$is_deleted)
Surv(test_df$month, test_df$is_deleted)
survfit(Surv(month, is_deleted) ~ group, data=test_df)
m <- survfit(Surv(month, is_deleted) ~ group, data=test_df)
m
plot(m)
plot(m)
summary(m)
install.packages("survminer")
install.packages("survminer")
library(survminer)
knitr::opts_chunk$set(echo = TRUE)
Sys.setlocale("LC_ALL", "CHS")
library(survival)
library(survminer)
library(tidyverse)
ggsurvplot(m)
summary(fit)$table
summary(m)$table
ggsurvplot(m,surv.median.line = "hv",)
survdiff(m)
survdiff(Surv(month, is_deleted) ~ group, data=test_df)
knitr::opts_chunk$set(echo = TRUE)
Sys.setlocale("LC_ALL", "CHS")
library(survival)
library(survminer)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(survival)
library(survminer)
library(tidyverse)
df <- xlsx::read.xlsx2("../datasets/涓ょ鏂瑰紡娴嬮噺16鍚岴DV鍊<bc>.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(survival)
library(survminer)
library(tidyverse)
df <- xlsx::read.xlsx2("../datasets/涓ょ鏂瑰紡娴嬮噺16鍚岴DV鍊<bc>.xlsx")
df <- xlsx::read.xlsx2("../datasets/两种方式测量16名EDV值.xlsx")
df <- xlsx::read.xlsx2("../datasets/两种方式测量16名EDV值.xlsx", 1)
df
df %>%
mutate(diff = `mEDV` - `sEDV`) %>%
mutate(mean = (`mEDV`+ `sEDV`)/ 2)
df <- xlsx::read.xlsx2("../datasets/两种方式测量16名EDV值.xlsx", 1)
df
df <- readxl::read_excel("../datasets/两种方式测量16名EDV值.xlsx", 1)
df
df <- readxl::read_excel("../datasets/两种方式测量16名EDV值.xlsx")
df <- readxl::read_excel("../datasets/两种方式测量16名EDV值.xlsx", sheet=1)
df
df %>%
mutate(diff = `mEDV` - `sEDV`) %>%
mutate(mean = (`mEDV`+ `sEDV`)/ 2)
library(ggplot2)
ggbland <- function(df, alpha) {
df %>%
mutate(diff = `mEDV` - `sEDV`) %>%
mutate(mean = (`mEDV`+ `sEDV`)/ 2)
}
qnorm(0.975)
ggplot(temp_df, aes(x = avg, y = diff)) +
geom_point(size=2) +
geom_hline(yintercept = mean_diff) +
geom_hline(yintercept = lower, color = "red", linetype="dashed") +
geom_hline(yintercept = upper, color = "red", linetype="dashed") +
ggtitle("Bland-Altman Plot") +
ylab("Difference Between Instruments") +
xlab("Average")+theme_bw()
ggbland <- function(df, alpha = 0.05) {
z_score = qnorm(1 - alpha/2)
temp_df <- df %>%
mutate(diff = `mEDV` - `sEDV`) %>%
mutate(avg = (`mEDV`+ `sEDV`)/ 2)
mean_diff <- mean(temp_df$diff)
lower <- mean_diff - z_score * sd(temp_df$diff)
upper <- mean_diff + z_score * sd(temp_df$diff)
ggplot(temp_df, aes(x = avg, y = diff)) +
geom_point(size=2) +
geom_hline(yintercept = mean_diff) +
geom_hline(yintercept = lower, color = "red", linetype="dashed") +
geom_hline(yintercept = upper, color = "red", linetype="dashed") +
ggtitle("Bland-Altman Plot") +
ylab("Difference Between Instruments") +
xlab("Average")+theme_bw()
}
plot.ggbland <- function(df, alpha = 0.05) {
z_score = qnorm(1 - alpha/2)
temp_df <- df %>%
mutate(diff = `mEDV` - `sEDV`) %>%
mutate(avg = (`mEDV`+ `sEDV`)/ 2)
mean_diff <- mean(temp_df$diff)
lower <- mean_diff - z_score * sd(temp_df$diff)
upper <- mean_diff + z_score * sd(temp_df$diff)
ggplot(temp_df, aes(x = avg, y = diff)) +
geom_point(size=2) +
geom_hline(yintercept = mean_diff) +
geom_hline(yintercept = lower, color = "red", linetype="dashed") +
geom_hline(yintercept = upper, color = "red", linetype="dashed") +
ggtitle("Bland-Altman Plot") +
ylab("Difference Between Instruments") +
xlab("Average")+theme_bw()
}
plot.ggbland(df)
plot.ggbland <- function(df, alpha = 0.05) {
z_score = qnorm(1 - alpha/2)
temp_df <- df %>%
mutate(diff = `mEDV` - `sEDV`) %>%
mutate(avg = (`mEDV`+ `sEDV`)/ 2)
mean_diff <- mean(temp_df$diff)
lower <- mean_diff - z_score * sd(temp_df$diff)
upper <- mean_diff + z_score * sd(temp_df$diff)
ggplot(temp_df, aes(x = avg, y = diff)) +
geom_point(size=2) +
geom_hline(yintercept = mean_diff) +
geom_hline(yintercept = lower, color = "red", linetype="dashed") +
geom_hline(yintercept = upper, color = "red", linetype="dashed") +
geom_hline(yintercept = 0, color = "grey", linetype="dashed") +
ggtitle("Bland-Altman Plot") +
ylab("Difference Between Instruments") +
xlab("Average")+theme_bw()
}
plot.ggbland(df)
